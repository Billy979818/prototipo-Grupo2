<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>